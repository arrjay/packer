#version=DEVEL
# System authorization information
auth --enableshadow --passalgo=sha512
%include /tmp/repo-include
# Use graphical install
text
# Run the Setup Agent on first boot
firstboot --enable
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

%include /tmp/part-include

# reboot when done
reboot

# Network information
network  --bootproto=dhcp --device=eth0 --ipv6=auto --activate
network  --hostname=wcs

# Root password
rootpw --iscrypted $6$ddmoPYtWupIPA/Vn$9EcJ170zv2lnVP6mLK0W9zAWaf7OYmu3yHk9dY0/pl5dPluvkTp/wTLmT4C7BAIE4FAGxPQ0K0zPwftvdvl5/0
# System services
services --enabled="chronyd"
# System timezone
timezone America/Los_Angeles --isUtc
# System bootloader configuration

%packages
@^minimal
@core
chrony
kexec-tools
-fprintd-pam
-intltool
-mariadb-libs
-postfix
-linux-firmware
-aic94xx-firmware
-atmel-firmware
-b43-openfwwf
-bfa-firmware
-ipw2100-firmware
-ipw2200-firmware
-ivtv-firmware
-iwl100-firmware
-iwl105-firmware
-iwl135-firmware
-iwl1000-firmware
-iwl2030-firmware
-iwl2000-firmware
-iwl3060-firmware
-iwl3160-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6000g2b-firmware
-iwl6050-firmware
-iwl7260-firmware
-iwl7265-firmware
-libertas-sd8686-firmware
-libertas-sd8787-firmware
-libertas-usb8388-firmware
-ql2100-firmware
-ql2200-firmware
-ql23xx-firmware
-ql2400-firmware
-ql2500-firmware
-rt61pci-firmware
-rt73usb-firmware
-xorg-x11-drv-ati-firmware
-zd1211-firmware
grub2
grub2-efi
grub2-efi-modules
shim
efibootmgr

%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=50 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=50 --notstrict --nochanges --notempty
pwpolicy luks --minlen=6 --minquality=50 --notstrict --nochanges --notempty
%end

%pre
read cmdline < /proc/cmdline
for ent in $cmdline ; do
  case $ent in
    mirroruri=*)
      mirroruri=${ent#mirroruri=}
      ;;
  esac
done
{
  printf 'url --url="%s7/os/x86_64"\n' "${mirroruri}"
  printf 'repo --name=updates --baseurl="%s7/updates/x86_64"\n' "${mirroruri}"
} > /tmp/repo-include

for d in $(find /sys/class/block/* | grep -vE '.*[0-9]$') ; do
  cdisk=$(basename $d)
  read ro < /sys/class/block/${cdisk}/ro
  if [ ${ro} != 0 ] ; then continue ; fi
  partitions=0
  for p in /sys/class/block/${cdisk}[0-9]* ; do
    if [ -e ${p} ] ; then break ; fi
  done
  if [ ${partitions} == 0 ] ; then disk=${cdisk} ; break ; fi
done

parted /dev/${disk} mklabel gpt
parted /dev/${disk} mkpart primary 1m 5m
parted /dev/${disk} mkpart '"EFI System Partition"' 5m 300m
parted /dev/${disk} mkpart primary 300m 800m
parted /dev/${disk} mkpart primary 800m 100%
parted /dev/${disk} set 2 boot on

mkfs.vfat -F32 /dev/${disk}2

{
  printf 'part biosboot --fstype=biosboot --onpart=%s1\n' ${disk}
  printf 'part /boot/efi --fstype=efi --fsoptions="umask=0077,shortname=winnt" --onpart=%s2 --noformat\n' ${disk}
  printf 'part /boot --fstype=xfs --onpart=%s3\n' ${disk}
  printf 'part pv.0 --onpart=%s4\n' ${disk}
  printf 'volgroup VolGroup00 pv.0\n'
  printf 'logvol swap --vgname=VolGroup00 --name=LogVol01 --size=512\n'
  printf 'logvol / --vgname=VolGroup00 --fstype=xfs --name=LogVol00 --size=1024 --grow\n'
  printf 'bootloader --append=" crashkernel auto" --location=mbr --boot-drive=%s\n' ${disk}
} > /tmp/part-include

printf 'export disk="%s"\nmirroruri="%s"\n' "${disk}" "${mirroruri}" > /tmp/post-vars
%end

%post --nochroot --log=/mnt/sysimage/root/post.log
. /tmp/post-vars

if [ -d /sys/firmware/efi/efivars ] ; then
  # install i386 grub in efi
  chroot /mnt/sysimage grub2-install --target=i386-pc /dev/${disk}
  chroot /mnt/sysimage grub2-mkconfig | sed 's@linuxefi@linux16@g' | sed 's@initrdefi@initrd16@g' > /mnt/sysimage/boot/grub2/grub.cfg
else
  # install efi grub in i386
  chroot /mnt/sysimage grub2-mkconfig | sed 's@linux16@linuxefi@g' | sed 's@initrd16@initrdefi@g' > /mnt/sysimage/boot/efi/EFI/centos/grub.cfg
fi

# either way, set the disk flags correctly.
parted /dev/${disk} disk_set pmbr_boot off
parted /dev/${disk} set 2 boot on

chroot /mnt/sysimage rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

printf '[base]\nbaseurl=%s$releasever/os/$basearch/\ngpgcheck=1\n' "${mirroruri}" > /mnt/sysimage/etc/yum.repos.d/CentOS-Base.repo
printf '[updates]\nbaseurl=%s$releasever/updates/$basearch/\ngpgcheck=1\n' "${mirroruri}" >> /mnt/sysimage/etc/yum.repos.d/CentOS-Base.repo
printf '[extras]\nbaseurl=%s$releasever/extras/$basearch/\ngpgcheck=1\n' "${mirroruri}" >> /mnt/sysimage/etc/yum.repos.d/CentOS-Base.repo

%end
